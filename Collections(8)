
43) collections.Counter():

from collections import Counter

num_sizes = int(input())
sizes = Counter(list(input().split()))
num_cus = int(input())
price = []
for i in range(0, num_cus):
    inpu = input().split()
    if sizes[(inpu[0])] > 0:
        price.append(int(inpu[1]))
        sizes.subtract(Counter([inpu[0]]))
price = sum(price)
print(price)

44) DefaultDict Tutorial:

from collections import defaultdict

diction = defaultdict(list)
nm = input().split()
n = int(nm[0])
m = int(nm[1])
for i in range(1,n+1):
    diction[input()].append(str(i))
for i in range(0, m):
    print (' '.join(diction[input()]) or -1)

45) collections.namedtuple(): 

from collections import namedtuple
numstu = int(input())
cat = input().split()
count = 0
for i in range(0, numstu):
    entryn = namedtuple('entryn', cat)
    fields = input().split()
    field1 = fields[0]
    field2 = fields[1]
    field3 = fields[2]
    field4 = fields[3]
    student = entryn(field1,field2,field3,field4)
    count += int(student.MARKS)
print(count/numstu)

46) Collections.OrderedDict():

from collections import OrderedDict

numitem = int(input())
dic = OrderedDict()
for i in range(numitem):
    item = input().split(' ')
    name = ' '.join(item[:-1])
    price = int(item[-1])
    if dic.get(name):
        dic[name] += price
    else:
        dic[name] = price

for i,v in dic.items():
    print(i,v)

47)

48)

49)

50)

