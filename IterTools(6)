37) itertools.product():

from itertools import product

a = (input().split())
b = (input().split())
c = []
B = []
A = []
for l in a:
    A.append(int(l))
c.append(A)
for k in b:
    B.append(int(k))
c.append(B)
for x in (product(*c)):
    print(x, end=' ')
    
38) itertools.permutations():

from itertools import permutations

inpu = input().split()
word = []
leng = int(inpu[1])
for l in inpu[0]:
    word.append(l)
lst =  sorted(list((permutations(word , leng))))
for l in lst:
    print(''.join(l))
    
39) itertools.combinations():

from itertools import combinations

inpu = input().split(' ')
word = []
leng = int(inpu[1])
lst = []
for l in inpu[0]:
    word.append(l)
for k in range(1, leng+1):
    lst.append(sorted(combinations(sorted(word), k)))
sorte = []
for l in range(0, len(lst)):
    sorte.append(sorted(lst[l]))
for h in sorte:
    for k in h:
        if len(k) >= 2:
            print(''.join(k))
        else:
            print(k[0])
            
40) itertools.combinations_with_replacement():

from itertools import combinations_with_replacement

inpu = input().split()
word = []
leng = int(inpu[1])
retu = list()
for l in inpu[0]:
    word.append(l)
lst =  sorted(list(sorted(combinations_with_replacement(word, leng))))
for p in lst:
    p = sorted(p)
    retu.append(p)
for l in sorted(retu):
    print(''.join(l))
    
41) Compress the string!:

from itertools import groupby
inpu = input()
for i,j in groupby(inpu):
    print('('+str(len(list(j)))+', '+str(i)+')', end=' ')
    
 42) Iterables and Iterators:
 
 from itertools import combinations

leng = int(input())
letter = list(input().split())
ind = int(input())
lst = []
t = list(combinations(letter,ind))
f = [i for i in t if ('a') in i]
print(len(f)/len(t))


 






