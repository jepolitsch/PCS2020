#17)  Introduction to sets:

def average(array):
    myset = set(array)
    myset = float(sum(myset)/len(myset))
    return(myset)

#18) Symetrical differences:

sizea = input()
a = list(input().split(' '))
sizeb = input()
b = list(input().split(' '))
c = (a + b)
d = list(c)
e = list()
for x in c:
    if x in a and x in b:
        d.remove(x)
d = ((set(d)))
for y in d:
    e.append(int(y))
for p in sorted(e):
    print (int(p))

#19) No Idea! 

n = input()
items = input().split(' ')
like = set(input().split(' '))
dislike = set(input().split(' '))
happy = 0
for num in items:
    if num in like:
        happy += 1
    elif num in dislike:
        happy += -1
    else:
        happy = happy
print(happy)

#20) Sets .add():

N = int(input())
unique = []
for l in range (0,N):
    In = input()
    if In not in unique:
        unique.append(In)
print(len(unique))

#21) Sets .discard() .remove() .pop():

n = int(input())
s = set(map(int, input().split()))
numcom = int(input())
coman = []
for k in range(0, numcom):
    com = input().split(' ')
    coman.append(com)
    if com[0] == 'pop' and len(s) != 0:
        s.pop()
    elif com[0] == 'remove' and int(com[1]) in s:
        s.remove(int(com[1]))
    elif com[0] == 'discard':
        s.discard(int(com[1]))
sums = 0
for l in s:
    sums += int(l)
print(sums)

#22) Set .union():

lena = input()
a = input().split()
lenb = input()
b = input().split()
c = list(a+b)
d = set(c)

for k in d:
    if k in a and k in b:
        c.remove(k)
print(len(c))

#23) Set .intersection():

lena = input()
a = input().split()
lenb = input()
b = input().split()
c = list()
d = set(a+b)

for k in d:
    if k in a and k in b:
        c.append(k)
print(len(c))

#24) Set .difference():

lena = input()
a = input().split()
lenb = input()
b = input().split()
c = list()

for k in a:
    if k not in b:
        c.append(k)
print(len(c))


#25) Set .symetrical_difference() Operation:

lena = input()
a = input().split()
lenb = input()
b = input().split()
c = set(a+b)
d = set(a+b)
for k in c:
    if k in a and k in b:
        d.remove(k)
print(len(d))

#26) Set Mutations:

lenset = input()
set1 = set(input().split(' '))
numset = int(input())
ret = list()
for k in range(0, numset):
    com = input().split(' ')
    set2 = set(input().split(' '))
    if com[0] == 'intersection_update':
        set1.intersection_update(set2)
    elif com[0] == 'update':
        set1.update(set2)
    elif com[0] == 'symmetric_difference_update':
        set1.symmetric_difference_update(set2)
    elif com[0] == 'difference_update':
        set1.difference_update(set2)

for l in set1:
    ret.append(int(l))

print(sum(ret))

#27) The Captains Room:

k = input()
lst = input().split()
set1 = set()
set2 = set()
for k in lst:
    if k in set1:
        set2.add(k)
    else:
        set1.add(k)
ret = list(set1.difference(set2))
print(ret[0])

#28) Check Subset:

cases = int(input())
for x in range(0, cases):
    len1 = int(input())
    set1 = set(input().split())
    len2 = int(input())
    set2 = set(input().split())
    if set1.issubset(set2):
        print (True)
    else:
        print(False)

#29) Check Strict Subset:

set1 = set(input().split())
runs = int(input())
out = True
for x in range(0, runs):
    other = set(input().split())
    if other == set1:
        out = False
    elif other.issubset(set1) != True:
        out = False
print(out)





